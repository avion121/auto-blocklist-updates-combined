name: Update Blocklist Daily

on:
  schedule:
    - cron: '0 0 * * *'  # This means it will run once every day at midnight UTC
  workflow_dispatch:  # This allows you to manually trigger the action if needed

jobs:
  update_blocklist:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # This checks out your code to the runner

    - name: Fetch latest changes
      run: |
        # Fetch latest changes from the remote repository
        git fetch origin main

    - name: Update Blocklist
      run: |
        # Check if blocklist.txt exists, otherwise create it
        touch blocklist.txt

        # Append blocklists to blocklist.txt
        echo "oisdbig" >> blocklist.txt
        echo "easylist" >> blocklist.txt
        echo "easyprivacy" >> blocklist.txt
        echo "steven-black" >> blocklist.txt
        echo "HaGeZi's Pro DNS Blocklist" >> blocklist.txt
        echo "Fanboy anti newsletter" >> blocklist.txt
        echo "fanboy mobile notification" >> blocklist.txt
        echo "fanboy anti chat" >> blocklist.txt
        echo "youtube anti shorts" >> blocklist.txt
        echo "bypass paywall" >> blocklist.txt
        echo "d3ward.github.io##.adbox.banner_ads.adsbox" >> blocklist.txt
        echo "d3ward.github.io##.textads" >> blocklist.txt
        echo "/pagead.js$domain=d3ward.github.io" >> blocklist.txt
        echo "/widget/ads" >> blocklist.txt

        # Optionally fetch additional blocklist files via curl or wget
        curl -s https://raw.githubusercontent.com/easylist/easylist/master/easylist.txt >> blocklist.txt
        curl -s https://raw.githubusercontent.com/easylist/easyprivacy/master/easyprivacy.txt >> blocklist.txt

    - name: Commit changes
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'

        # Add changes to git and commit them
        git add blocklist.txt
        git commit -m "Update blocklist" || echo "No changes to commit"

    - name: Rebase and push changes
      run: |
        # Rebase local changes with remote to avoid conflicts
        git rebase origin/main || (echo "Rebase failed, aborting." && exit 1)

        # Push changes to the repository if no conflict occurred
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
